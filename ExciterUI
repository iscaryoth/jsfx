// (C) 2007, Michael Gruhn.

// NO WARRANTY IS GRANTED. THIS PLUG-IN IS PROVIDED ON AN "AS IS" BASIS, WITHOUT
// WARRANTY OF ANY KIND. NO LIABILITY IS GRANTED, INCLUDING, BUT NOT LIMITED TO,
// ANY DIRECT OR INDIRECT,  SPECIAL,  INCIDENTAL OR CONSEQUENTIAL DAMAGE ARISING
// OUT OF  THE  USE  OR INABILITY  TO  USE  THIS PLUG-IN,  COMPUTER FAILTURE  OF
// MALFUNCTION INCLUDED.  THE USE OF THE SOURCE CODE,  EITHER  PARTIALLY  OR  IN
// TOTAL, IS ONLY GRANTED,  IF USED IN THE SENSE OF THE AUTHOR'S INTENTION,  AND
// USED WITH ACKNOWLEDGEMENT OF THE AUTHOR. FURTHERMORE IS THIS PLUG-IN A  THIRD
// PARTY CONTRIBUTION,  EVEN IF INCLUDED IN REAPER(TM),  COCKOS INCORPORATED  OR
// ITS AFFILIATES HAVE NOTHING TO DO WITH IT.  LAST BUT NOT LEAST, BY USING THIS
// PLUG-IN YOU RELINQUISH YOUR CLAIM TO SUE IT'S AUTHOR, AS WELL AS THE CLAIM TO
// ENTRUST SOMEBODY ELSE WITH DOING SO.

desc:Exciter (UI)
desc:Exciter (UI) [LOSER+iscaryoth]
//tags: processing exciter distortion
//author: LOSER
import ui-lib.jsfx-inc
import vu.jsfx-inc
import ui-lib-overlay.jsfx-inc

slider1:2000<100,18000,1>-Frequency (Hz)
slider2:0<0,6,.1>-Clip Boost (dB)
slider3:0<0,100,1>-Harmonics (%)
slider4:-6<-120,0,.1>-Mix Back (dB)

options:no_meter

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
c_ampDB = 8.65617025;
cDenorm=10^-30;

freemem = ui_setup(0);
vu_in.vu_stereo_init();
vu_out.vu_stereo_init();

function slider_recalc() (
  clipBoost = exp(slider2/c_ampDB);
  mixBack = exp(slider4/c_ampDB);
  
  hdistr = min(slider3/100,.9);
  foo = 2*hdistr/(1-hdistr);
  
  freq = min(slider1,srate);
  x = exp(-2.0*$pi*freq/srate);
  a0 = 1.0-x;
  b1 = -x;
  __counter += 1;
);

@slider
slider_recalc();

@sample
s0 = spl0;
s1 = spl1;

vu_in.vu_stereo_sample(spl0, spl1);

s0 -= (tmplONE = a0*s0 - b1*tmplONE + cDenorm);
s1 -= (tmprONE = a0*s1 - b1*tmprONE + cDenorm);

s0 = min(max(s0*clipBoost,-1),1);
s1 = min(max(s1*clipBoost,-1),1);

s0 = (1+foo)*s0/(1+foo*abs(spl0));
s1 = (1+foo)*s1/(1+foo*abs(spl1));

s0 -= (tmplTWO = a0*s0 - b1*tmplTWO + cDenorm);
s1 -= (tmprTWO = a0*s1 - b1*tmprTWO + cDenorm);

spl0 += s0 * mixBack;
spl1 += s1 * mixBack;

vu_out.vu_stereo_sample(spl0, spl1);


@block
vu_in.vu_stereo_block();
vu_out.vu_stereo_block();


@gfx

ui_start("main");
ui_screen() == "main" ? (
 
  ui_color(48, 48, 48);
  ui_fill();   
  ui_color(200, 200, 200);
  
  ui_split_right(150);
    ui_color(38, 38, 38);
    ui_fill();
    
    gfx_ui_margins(20, 15, 20, 15);
    ui_fontsize(13);
    gfx_ui_meter_numbers(ui_left(), ui_top()+31, ui_width(), ui_height()-63);
    ui_fontsize(16);
    gfx_ui_margins(0, 10, 0, 30);
    
    ui_split_leftratio(1/2);
      vu_in.gfx_ui_stereometer("In");
    ui_split_next();
      vu_out.gfx_ui_stereometer("Out");
    ui_pop();
  ui_pop();
  
  
  ui_split_bottom(50);
    ui_split_right(15);
    ui_pop();
    ui_color(160, 160, 160);
    ui_align(1,0.5);
    ui_text("Exciter [LOOSER]");
  ui_pop();
  
  ui_split_leftratio(0.5);
    ui_split_right(100);
    
      ui_split_top(140);
        slider1 = gfx_ui_knob(slider1, 100, 18000, 0, "Freq", "%.0f Hz"); 
      ui_split_next();
        slider3 = gfx_ui_knob(slider3, 0, 100, 0, "Harmonics", "%.0f %%");
      ui_pop(); 
      
    ui_pop();
  ui_split_next(); 
    ui_split_left(100);
    
      ui_split_top(140);
        slider2 = gfx_ui_knob(slider2, 0, 6, 0, "Clip boost", "%.1f dB"); 
      ui_split_next();
        slider4 = gfx_ui_knob(slider4, -120, 0, 0, "Mix back", "%.1f dB");
      ui_pop();
      
    ui_pop(); 
  ui_pop();
  
  (slider1 != old_slider1 || 
   slider2 != old_slider2 ||
   slider3 != old_slider3 ||
   slider4 != old_slider4) ? (
      old_slider1 = slider1; 
      old_slider2 = slider2;
      old_slider3 = slider3;
      old_slider4 = slider4;
    slider_recalc();
  )
)

